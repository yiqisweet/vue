var path = require('path');module.exports = {    // 入口文件地址，不需要写完，会自动查找    entry : ['./src/main.js'],    //输出    output : {        // 文件地址，使用绝对路径形式        path : path.join(__dirname,'./dist'),        //[name]这里是webpack提供的根据路口文件自动生成的名字        filename: '[name].js',        // 公共文件生成的地址        publicPath : '/dist/'    },    //服务器配置相关，自动刷新    devServer: {        historyApiFallback: true,        hot: false,        inline: true        // grogress: true    },    //加载器 or  装载机    module:{        loaders : [            //解析vue文件            {                test : /\.vue$/,                loader : 'vue-loader'            },            //编译css并自动添加前缀            {                test :/\.css$/,                loader : 'style!css!autoprefixer'            },            //.scss文件想要编译，，.scss就需要这些东西！来编译处理            {                test : /\.scss$/,                loader : 'style!css!sass?sourceMap'            },            //html模板编译            {                test : /\.(html|tpl)$/,                loader : 'html-loader'            }        ]    },    // .vue的配置。需要单独出来配置，其实没什么必要--因为我删了也没保错，不过这里就留这把，因为官网文档里是可以有单独的配置的。    // vue : {    //     loaders : {    //         css : 'style!css!autoprefixer'    //     }    // },    // resolve : {    //     // require时省略的扩展名，如：require('module') 不需要module.js    //     extensions: ['', '.js', '.vue'],    //     // 别名，可以直接使用别名来代表设定的路径以及其他    //     alias: {    //         filter: path.join(__dirname, './src/filters'),    //         components: path.join(__dirname, './src/components')    //     }    // },  //  开启source-map，webpack有多种source-map，在官网文档可以查到    devtool: 'eval-source-map'}